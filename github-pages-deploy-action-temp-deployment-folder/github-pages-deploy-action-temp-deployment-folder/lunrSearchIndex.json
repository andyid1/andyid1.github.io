[{"id":"itemfe4da09a-b9cf-483d-b2d5-6","title":"Welcome","created":1689962391,"location":"item-fe4da09a-b9cf-483d-b2d5-6397785f61fe","description":"Welcome to your new HAX site! Click edit on the top bar to get started\nThis is a boilerplate so that you can add and make new things from the npx @haxtheweb/haxcms-nodejscommand\nWhat can I do?\nWe've ","text":"welcome to your new hax site! click edit on the top bar get started\n\n\nthis is a boilerplate so that you can add and make things from npx @haxtheweb/haxcms-nodejscommand\nwhat i do?\nweve got ton of blocks are easy use lot done with little effort, much in fact we made video exploring some them!\nhere's list just few started, or if pro, delete this content have fun!\n  \n by hitting \"edit page\" above\n hit enter paragraph text another one\n \"merlin\" see all do\n try video, insert video\n \n\n\n\n\n\nthis looks fun, let's go!\n\n you, while using hax\n ...probably\nget involved hax\n\n \n\n\n\n\n \n\n\n\n\n\nwe hope enjoy working as team has enjoyed building it! want join our community, look for discord link among other ways involved!\n\n read teaching excellence resources\n community\n post an issue queue"},{"id":"item11ac110a-d9d7-4917-92b6-2","title":"1. Belajar Fundamental Front-End Web Development.docx","created":1723822091,"location":"item-11ac110a-d9d7-4917-92b6-2bea37e917e1","description":"ECMAScript 6\nPendahuluan ECMAScript 6\nBahasa JavaScript didefinisikan dalam standar&#160;ECMA-262. Bahasa yang didefinisikan menggunakan standar ini disebut dengan ECMAScript. Browser dan Node.js ada","text":"ecmascript 6\npendahuluan 6\nbahasa javascript didefinisikan dalam standar&#160;ecma-262. bahasa yang menggunakan standar ini disebut dengan ecmascript. browser dan node.js adalah contoh implementasi dari ecma-262/ecmascript. kedua platform tersebut (browser node.js) fungsionalitas berbeda. bagi browser, digunakan untuk membantu website menjadi lebih interaktif. sedangkan node.js, pengembangan aplikasi diluar seperti server, desktop, mobile, bahkan game. sehingga memberikan lain menambahkan objek method sesuai kebutuhan masing - masing.\nnamun kembali lagi, bahwa inti itu sendiri tak heran, ecma-262 sangat vital menentukan kesuksesan javascript.\nsejarah singkat javascript\nmenurut sejarah, sebenarnya pada tahun 1995 netscape melahirkan pemrograman nama &#8220;livescript&#8221;, namun saat java sedang populer.&#160;\nnetscape sun selaku pengembang (saat oracle) melakukan perjanjian lisensi mengubah penamaan livescript javascript. setelah diadopsi di luar netscape, distandarisasi oleh european computer manufacturer&#8217;s association (ecma). itulah sebabnya terkadang ada menyebutnya ecmascript.\nterdapat beberapa versi 2000 2010, 3 (es3) merupakan banyak ketika mendominasi. selama waktu tersebut, 4 (es4) proses harapan akan improvisasi cukup signifikan, ambisi tidak berjalan mulus 2008 es4 ditinggalkan.&#160;\nwalaupun begitu, bukan akhir digantikan 5 (es5) mengurangi ambisinya. apa? perbaikan hanya terbatas hal non-kontroversial. pembaruan berhasil akhirnya es5 pun rilis 2009.\nakhirnya 2015&#160;ecmascript 6 (es6)&#160;rilis membawa perubahan besar termasuk ide sudah direncanakan 4.\nsaat menyentuh 10 (es10), tetapi mulai es6, update tahunan bersifat minor. kita bisa lihat rincian updatenya laman&#160;wikipedia&#160;berikut.\npada modul kali membahas deklarasi variabel, template string, function syntax, class, promise, hingga module.\nmenjalankan potongan kode\ndalam pembelajaran ke depan berhadapan potongan-potongan kode. anda dianjurkan menjalankannya agar memahami materi disampaikan.\nbagi familiar menjalankan kode diberikan mengeksekusinya berkas (.js).&#160;\nbagaimana jika belum node.js? online&#160;repl.it. apa itu? repl.it sebuah coding secara online. repl.it, dapat menuliskan itu.\nterdapat sekali didukung ini, antaranya javascript, html css.\npada tiap pembahasan materi, kami menyediakan tautan mengarahkan ada. contohnya:\ndi sana menyalin pilih berkas&#160;index.js.\ncukup mudah bukan? siap belajar? yuk lanjut selanjutnya!\npersiapan proyek latihan\nsebelum fitur sintaks 2015 (es6). pembelajarannya nanti, mengimplementasikan dipelajari melalui sederhana bernama &#8220;club finder&#8221;. namanya, berfungsi pencarian klub olahraga, baik basket, sepak bola, dsb.&#160;\nsaat diharapkan. penulisan dituliskan 2015. tugas anda! sambil belajar terbaru 2015, juga menerapkan ilmu pelajari sederhana. itu, mari persiapkan dulu kebutuhannya.&#160;\nsilakan unduh project starter link berikut ini: clubfinder download.\nsetelah mengunduh silakan extract zip. kemudian komputer terdapat satu folder &#8220;clubfinder&#8221;.\njika berhasil, menghapus zip tadi.&#160;\nkemudian buka text editor miliki. contohnya sini gunakan visual studio code.\npada editor, melihat bagaimana club finder dibangun. dibangun html, css murni tanpa bantuan framework bootstrap, ataupun jquery. lulus kelas membuat front-end web pemula&#160;dengan baik, membuatnya.\nsekarang milik anda. bebas bereksplorasi mengetahui logika dalamnya. seiring ikuti, cobalah 2015.\nsudah siap? cara baru mendeklarasikan variabel.\ndeklarasi variabel\npotongan https://repl.it/@dicodingacademy/163-02-variable-declaration?lite=true\nawalnya variabel agak sedikit rumit. dikarenakan berbeda berbasis c umumnya tersedia blok ia dibuat. kasus selalu benar. dibuat tergantung mendeklarasikannya. membingungkan jangan khawatir, bahas masalah detail.\ndeklarasi var hoisting\nvariabel dideklarasikan diangkat tingkatan atas fungsi walaupun menuliskannya fungsi. pengangkatan hoisting.&#160;\nperhatikan berikut:\nfunction maketea(iscold) {\n&#160; if (iscold) &#160; var&#160;tea =&#160;make an ice tea!';\n&#160; }&#160;else&#160;{\n&#160;  &#160;var&#160;tea =&#160;'make a hot }\n&#160; return&#160;tea;\n}\nconsole.log(maketea(false));\n/* output:\nmake tea!\n*/\nkode menghasilkan output&#160;&#8220;make tea!&#8221;. mengapa demikian? padahal tea else. seharusnya mengaksesnya error:\nreferenceerror: is not defined\nnah, inilah dapatkan keyword variabel. belakang layar, mengangkat berada maketea. begitu berikut.\nfunction maketea = '';\n&#160; &#160;tea tea!\n*/\nbahkan karena hoisting menginisialisasi nilai sebelum dideklarasikan. masuk akal, contohnya.\nfunction getfood() food =&#160;'choocolate';\n&#160; console.log(food);\n&#160; var&#160;food;\n}\ngetfood();\n/* output:\nchoocolate\n*/\nproses kontroversial jarang developer bingung ini.\nlet const\nsejak selain var, menginisialisasikan let const. es6 kontroversial, salah satunya tadi.\nvariabel atau const menghilangkan permasalahan cakupan block (sama c), perhatikan berikut. sebelumnya variabel:\nfunction 'make tea!';\n&#160;&#160;} else return tea;\n}\n&#160;\nconsole.log(maketea(false));\n&#160;\n/* output:\nreferenceerror: defined\n*/\nvariabel diakses terhenti tempat biasa temporal dead zone dideklarasi. mencoba melakukannya maka eror sama.\nfunction let&#160;food;\n}\ngetfood();\n/* defined\n*/\nlet solusi menjadikan ketat pendeklarasian meminimalisir peluang terjadinya bug.\naturan penggunaan const\nsetelah harus daripada lantas perbedaan sendiri? kapan const? pula sebaliknya.\nvariabel memiliki kesamaan karakteristik. persamaannya ulang sama (kita var). kasusnya.\nlet\nlet&#160;name =&#160;'john';\nlet&#160;name =&#160;'doe';\nconsole.log(name);\n/* error:\nsyntaxerror: identifier 'name' has already been declared\n*/\nconst\nconst&#160;name =&#160;'john';\nconst&#160;name declared\n*/\nperbedaan antara let, diinisialisasi nilainya. bisa, pastikan langsung tersebut. kasusnya.\nlet\nlet name 'john';\nname output:\ndoe\n*/\nconst\nconst error:\ntypeerror: assignment to constant variable.\n*/\njadi, intinya aturan umum penggunaanya sebagai berikut:\ngunakan diinisialisasikan nilainya.&#160;\ngunakan nilainya.\nconst paling memang berencana nilainya.\nada catatan perbedaannya jelas array objek.\nmenginisialisasikan ulang\narray\nconst fruits ['apple', 'orange'];\nfruits ['apple',&#160;'orange',&#160;'banana'];\nconsole.log(fruits);\n/* output\ntypeerror: variable. */\nobject\nconst people { name: 'john', age: 18 };\npeople name:&#160;'john', age:&#160;18, regency:&#160;'bandung'&#160;};\nconsole.log(people);\n/* typeerror: */\nmengubah\narray\nconst 'orange'];\nfruits.push('banana');\nconsole.log(fruits);\n/* output:\n[ \"apple\", \"orange\", \"banana\" ]&#160;\n*/\nobject\nconst };\npeople.regency =&#160;'bandung';\nconsole.log(people);\n/* output:\n{ \"john\", 18, regency: \"bandung\" }\n*/\nmembuat read-only, tapi berarti diubah mungkin menampung primitif number, boolean sulit nilainya inisialisasi ulang.\nlatihan: variabel\nselamat! sekarang es6. nah saatnya terapkan finder.&#160;\nsaat penerapan seluruhnya keyword&#160;var. kan akibat dihadapi menggunakan&#160;var? ubahlah seluruh es6.\ngood luck for your first duty!\nsolusi: variabel\napakah es6? belum, lakukan bersama-sama.\njika ada, masih menggunakan&#160;var. berkas&#160;main.js,&#160;clubs.js, ataupun&#160;data-source.js.\nmain.jsdata-source.jsclubs.js\nvar main () searchelement document.queryselector('#searchelement'); buttonsearchelement document.queryselector('#searchbuttonelement'); clublistelement document.queryselector('#clublist'); onbuttonsearchclicked datasource new datasource(renderresult, fallbackresult); datasource.searchclub(searchelement.value); }; renderresult (results) clublistelement.innerhtml ''; results.foreach(function (club) club.name; fanart club.fanart; description club.description; clubelement document.createelement('div'); clubelement.setattribute('class', 'club'); clubelement.innerhtml '&lt;img class=\"fan-art-club\" src=\"' + '\" alt=\"fan art\"&gt;\\n' '&lt;div class=\"club-info\"&gt;\\n' '&lt;h2&gt;' '&lt;/h2&gt;\\n' '&lt;p&gt;' '&lt;/p&gt;' '&lt;/div&gt;'; clublistelement.appendchild(clubelement); }) fallbackresult (message) += '&lt;h2 class=\"placeholder\"&gt;' message '&lt;/h2&gt;' buttonsearchelement.addeventlistener('click', onbuttonsearchclicked);};\nmari ubah deklarasinya menggunakan&#160;const. mengapa&#160;const? telaah baris berupa statement jadi, alasan gunakan&#160;let&#160;pada ini.\nsetelah kode&#160;main.js,&#160;clubs.js, dan&#160;data-source.js&#160;akan tampak ini:\nmain.jsdata-source.jsclubs.js\nconst }); onbuttonsearchclicked);};\nbagaimana guna memastikan benar? coba berkas&#160;index.html&#160;pada browser. lancar, diterapkan baik.\nnamun, lancar error pada&#160;console browser? malu bertanya forum diskusi ya!\nlangkah solution temukan repository berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/102-club-finder-variable-declaration-solution\nsolusi: literals\napakah literals pengelolaan string? bersama-sama.\nyang pertama, berkas&#160;main.js, tepatnya fungsi&#160;renderresult&#160;kita berikut:\nclubelement.innerhtml '&lt;/div&gt;';\ndengan ini:\nclubelement.innerhtml ` &lt;img src=\"${fanart}\" art\"&gt; &lt;div class=\"club-info\"&gt; &lt;h2&gt;${name}&lt;/h2&gt; &lt;p&gt;${description}&lt;/p&gt; &lt;/div&gt;`;\nlalu fungsi&#160;fallbackresult&#160;ini:\nclublistelement.innerhtml '&lt;/h2&gt;';\nmenjadi ini:\nclublistelement.innerhtml `&lt;h2 class=\"placeholder\"&gt;${message}&lt;/h2&gt;`;\ntemplate templating menyisipkan expression dalamnya mudah.\nterakhir, sebaiknya berkas&#160;data-source.js. fungsi&#160;searchclub.\nthis.onfailed(keyword ' found');\nmenjadi:\nthis.onfailed(`${keyword} found`);\nuntuk benar, baik.\nnamun console berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/103-club-finder-template-literals-solution\ndestructuring object array\npotongan ini:&#160;\nobject destructuring: https://repl.it/@dicodingacademy/163-02-destructuring-object?lite=truearray https://repl.it/@dicodingacademy/163-02-destructuring-array?lite=true\nliterasi dua mengelola data javascript.&#160;json (javascript notation) format populer transaksi ini.\n[ \"id\": 14, \"title\": \"menjadi android expert\", \"author\": \"google atp\" }, 51, \"belajar pemula\", 74, \"membangun progressive apps\", \"codepolitan\" 123, dasar web\", \"dicoding indonesia\" }]\njika struktur&#160;json&#160;di atas, menyimpulkan struktur objek. memudahkan developer, mendestrukturkan array.\ntapi sebenarnya&#160;destructuring object&#160;dan&#160;array&#160;itu?&#160;destructuring&#160;pada mengeluarkan properties satuan kecil.\nsecara sadar pernah melakukan&#160;destructuring, dilakukan ini:\narrayobject\nconst foods ['pie', 'cake', 'honey']; myfood foods[0];const yourfood foods[1];const ourfood foods[2]; console.log(myfood, yourfood, ourfood); /* output:pie cake honey*/\nperhatikan pada&#160;destructuring object&#160;di atas. mengekstraksi array&#160;food&#160;dan objek&#160;profile. kemudian, setiap item disimpan lokal properti (key) objek&#160;profile&#160;(terkecuali array, key index). langkah terlihat mudah. namun, bayangkan manual persatu, terlalu berulang, kan?\nitulah untuk&#160;destructuring&#160;objek maupun array. ingin memecah bagian-bagian kecil, dipermudah mendapatkan diinginkan.\nlantas destructuring es6?\nlatihan: object\nselamat! sejauh nah, finder.\nsaat mana ini:\nconst club.name;const club.fanart;const club.description;\nkode berkas&#160;main.js. fungsi&#160;renderresult.\ntugas penerapannya teknik&#160;destructuring object&#160;pada luck!\ndestructuring array\ndestructuring serupa object. tanda kurung kurawal } siku [ ]. lainnya bekerja berdasarkan posisi propertinya. es6:\nconst favorites ['seafood', 'salad', 'nugget', 'soup']; [firstfood, secondfood, thirdfood, fourthfood] favorites; console.log(firstfood);console.log(secondfood);console.log(thirdfood);console.log(fourthfood); output:seafoodsaladnuggetsoup*/\ncontoh proses&#160;destructuring (favorites) (empat) string masing-masing dimasukkan lokal&#160;firstfood,&#160;secondfood,&#160;thirdfood, dan&#160;fourthfood. dipilih notasi.&#160;\nconst favorites;\nsebenarnya saja. terpenting urutan variabelnya saja.\nkita memilih pada&#160;index&#160;tertentu didestruksikan mengambil ketiga perlu menyiapkan kedua, ke-empat. membiarkan&#160;index&#160;array inginkan tetap kosong (tanpa menulis lokal). lanjut, koma (,) diperlukan menunjukkan posisi&#160;index-nya [, , thirdfood] console.log(thirdfood); output:nugget*/\ndestructuring assignment\nkita melakukan&#160;destructuring assignment&#160;pada objek, membungkusnya kurung. berikut:\nconst 'ice cream';let herfood 'noodles'; [myfood, herfood] console.log(myfood);console.log(herfood); output:seafoodsalad*/\narray&#160;destructuring assignment&#160;sangat berguna hendak menukar antar algoritma sorting ini:\nvar 1;var b 2;var temp; console.log('sebelum swap');console.log('nilai a: a);console.log('nilai b: b); temp a;a b;b console.log('setelah output:sebelum swapnilai 1nilai 2setelah 2nilai 1*/\nuntuk pertukaran nilai, membutuhkan penengah. adalah&#160;temp. penengah dibutuhkan menyimpan sementara ditukar. kurang efektif sementara.\ndengan array&#160;destructuring assignment&#160;kita ekstra. &#160;\nlet 1;let b= 2; [a, b] [b, a] outputsebelum 1*/\ndefault values\nketika posisinya terjangkau bernilai&#160;undefined. contohnya:\nconst ['seafood']; output:seafoodundefined*/\nseperti array&#160;destructuring&#160;kita default menjadi&#160;undefined.\nconst 'salad'] output:seafoodsalad*/\nspreading operator rest parameter\npotongan ini:\nspreading operator: https://repl.it/@dicodingacademy/163-02-spreading-operator?lite=truerest parameter:https://repl.it/@dicodingacademy/163-02-rest-parameter?lite=true\nmasih mengenai menarik parameter arrays mudah, yakni spreading parameter.\nspreading operator\nspreading three consecutive dots (...). namanya&#160;&#8220;spread&#8221;, membentangkan tepatnya&#160;iterable object&#160;menjadi elements. console.log(favorites); output:[ 'seafood', 'soup' ]*/\npada hasil dicetak (ditunjukkan ]) mencetak nilai&#160;favorites&#160;itu sendiri. menggunakan&#160;spread operator&#160;kita nilai-nilai tersebut.\nconst console.log(...favorites); output:seafood salad nugget soup*/\nterlihat perbedaanya, kan? spread meleburkan elemen panjang nilai&#160;array-nya ini:\nconsole.log(...favorites);\nsama ini:\nconsole.log(favorites[0], favorites[1], favorites[2], favorites[3]);\nspread cocok pada&#160;variadic functions, seperti&#160;console.log()&#160;atau&#160;math.max().\n/* math.max() -&gt; mencari terbesar */const numbers [12, 32, 90, 12, 32]; // menuliskan// console.log(math.max(numbers[0], numbers[1], numbers[2], numbers[3]); console.log(math.max(...numbers));/* output:90*/\nspread operator&#160;dapat menggabungkan buah baru. hasilnya 'soup'];const others ['cake', 'pie', 'donut']; allfavorites [favorites, others]; console.log(allfavorites); output:[[\"seafood\", \"salad\", \"nugget\", \"soup\"], [\"cake\", \"pie\", \"donut\"]]*/\nsayang sekali, tergabung. alih-alih nilainya, variabel&#160;allfavorite&#160;menjadi operator?\nconst [...favorites, ...others]; output:[\"seafood\", \"soup\", \"cake\", \"donut\"]*/\nyups, tergabung.&#160;\nrest parameter\nsebelumnya tahu bahwa&#160;variadic function&#160;dapat menerima parameter, apakah caranya parameter? jika&#160;spread operator&#160;adalah pelebur berbeda, kebalikan penasaran?\nrest menggunakan&#160;three dots&#160;(...). tentu teknik bermanfaat sebuah&#160;variadic function.\nsebagai penggunaanya, buat function&#160;yang menjumlahkan argument diberikan.\nfunction sum(...numbers) result 0; (let number of numbers) number; result;} console.log(sum(1, 2, 3, 4, 5)); output:15*/\nrest pada&#160;array destructuring, mengelompokkan terdestruksi bentuk lain. bingung? refrigerator ['samsung', 50, 'milk', 'cheese', 'egg', 'butter'];const [manufacture, weight, door, ...items] refrigerator; console.log(manufacture);console.log(weight);console.log(door);console.log(items); output:samsung502[\"milk\", \"cheese\", \"egg\", \"butter\"]*/\npada array&#160;refrigerator&#160;dimasukkan individual destructuring. variabel&#160;manufacture,&#160;weight,&#160;door&#160;diberikan index tiga pertama array&#160;refrigerator. sedangkan, variabel&#160;items&#160;di sisa array.\nfunction\npotongan ini:\narrow function:https://repl.it/@dicodingacademy/163-02-arrow-function?lite=truedefault parameters: https://repl.it/@dicodingacademy/163-02-default-parameter?lite=true\nfungsi bagian penting pemrograman. signifikan penulisannya. monoton mengembangkan website/aplikasi.\npada memanfaatkan&#160;arrow function, class hadirnya keyword&#160;class, menetapkan nilai&#160;default&#160;pada fungsi, sebagainya.\npenasaran perubahannya? ayo arrow function.\nfunction parameter\npada diletakan panah (=&#62;) fungsi.&#160;\n// fungsiconst sayname =&gt; console.log(`nama saya ${name}`);\nnamun berlaku bukan?&#160;\npada ini:&#160;\nconst sayhello (name, greet) console.log(`${greet}, ${name}!`); sayhello('dimas', 'selamat pagi'); output:selamat pagi, dimas!*/\nnamun biarkan saja kosong.\nconst console.log('selamat pagi semuanya!'); sayhello(); semuanya!*/\natau biasanya garis bawah (_) penulisannya simpel.\nblock body function\nfungsi merupakan&#160;mini program&#160;sehingga ketahui logika-logika terdiri banyak&#160;expression&#160;ataupun&#160;statement.&#160;\npada ringkas. dalamnya? function? jawabannya bisa!\nsama regular benar-benar ({ menampung&#160;body function&#160;di dituliskan. opsional saja.\njika butuh language (language.touppercase() === 'indonesia') pagi!'; 'good morning!'; }} console.log(sayhello('indonesia')); pagi!*/\nselain juga, keyword&#160;return&#160;agar mengembalikan nilai.\ndefault parameters\nfitur parameters, menghasilkan&#160;undefined&#160;walaupun dipanggil. function.\nberikut parameter:\nregular functionarrow function\nfunction sayhello(name 'stranger', greet 'hello') console.log(`${greet} ${name}!`);} 'hai');sayhello(); output:hai dimas!hello stranger!*/\narrow function\nconst (name stranger!*/\npada (=) parameter&#160;name&#160;dengan default&#160;&#8220;stranger&#8221;&#160;dan default&#160;&#8220;hello&#8221;. memanggil fungsi&#160;sayhello()&#160;tanpa menghasilkan&#160;undefined.\nkeyword this function\nperbedaan karakteristik selanjutnya keyword&#160;this. penjelasan dari&#160;this&#160;sendiri menyusul class. menggambarkan ketika&#160;this&#160;digunakan function.\njika dipanggil menggunakan&#160;keyword&#160;new, contoh:\nfunction people(name, age, hobby) this.name name; this.age age; this.hobby hobby;} programmer people('john', ['coding', 'read book', 'ping-pong']); console.log(programmer.name);console.log(programmer.age);console.log(programmer.hobby); output:john18['coding', 'ping-pong']*/\nobjek keyword&#160;new, halnya }.\nconst hobby: 'ping-pong'],}; 'ping-pong']*/\npada keyword&#160;this&#160;mengembalikan objeknya sendiri.&#160;this&#160;dapat objeknya. keyword&#160;this&#160;bernilai&#160;global object&#160;(window browser).\nsedangkan, gaya nilai&#160;this, artinya function. menggunakan&#160;this&#160;pada nilai&#160;this&#160;tersebut berada.\nperhatikan berikut:\nregular intromyself peoplepeople.prototype.intromyself settimeout(function ?? console.log(`hello! ${this.name}, umur ${this.age}.`); console.log(`hobby ${this.hobby}`); 300);}; 'ping-pong']);programmer.intromyself(); output:hello! undefined, undefined.hobby undefined*/\nfungsi dalam&#160;settimeout()&#160;dideklarasikan keyword&#160;new. keyword&#160;new&#160;yang dicoret (tidak digunakan) ini.&#160;\n// .... settimeout(new ....\njika menyertakan keyword&#160;new&#160;pada value&#160;this&#160;akan bernilai&#160;global object&#160;(window). output dari&#160;this.name,&#160;this.age, dan&#160;this.hobby&#160;menghasilkan nilai&#160;undefined.\nberbeda dalam&#160;settimeout(), nilai&#160;this&#160;memiliki obyek konteksnya (people). ini.\napa javascript\nkebanyakan memanfaatkan paradigma oop. konsep ini. oop sepenuhnya.\nseperti ketahui, blueprint. berbicara blueprint, membuatnya adalah&#160;prototype. sejak awal, javascript.\nwalaupun menggantikan prototype terlebih sintaknya. kebingungan khususnya dasarnya bahasa&#160;class basis&#160;(seperti java, c++, c#, swift, etc.). meskipun merasa dikembangkan 6.\nclass es6\nsebelum mendekati yaitu constructor padanya. konsep&#160;prototype.\nfunction car(manufacture, color) this.manufacture manufacture; this.color color; this.enginesactive false;} car.prototype.startengines console.log('mobil dinyalakan...'); true;}; car.prototype.info console.log('manufacture: this.manufacture); console.log('color: this.color); console.log('engines: (this.enginesactive ? 'active' : 'inactive'));}; johncar car('honda', 'red');johncar.startengines();johncar.info(); output: mobil dinyalakan...manufacture: hondacolor: redengines: active*/\npada atas,&#160;car&#160;merupakan&#160;constructor instance&#160;car&#160;baru kode&#160;new car()&#160;dieksekusi. melalui&#160;car.prototype, method&#160;startengines()&#160;dan&#160;carinfo()&#160;diwarisi setiap&#160;instance&#160;car dibuat, sehingga&#160;johncar&#160;(sebagai instance&#160;car) mengakses tersebut.\nteknik es6.\ncatatan:mengapa instance pada&#160;prototype&#160;atau&#160;__proto__&#160;? pada&#160;constructor&#160;sama properti?&#160;\nalasannya pada&#160;constructor&#160;maka ketika&#160;instance&#160;dibuat. pendekatan banyak, memakan memori banyak.\nsedangkan prototype, kali. diwarisi kepada setiap&#160;instance&#160;yang dibuat.\nes6 class\ndengan pembuatan mirip keyword&#160;class&#160;itu diikuti class-nya.&#160;\nclass car constructor(manufacture, false; car.prototype.startengine startengines() true; info() console.log(`manufacture: ${this.manufacture}`); console.log(`color: ${this.color}`); console.log(`engines: ${this.enginesactive 'inactive'}`); active*/\njika terbiasa pasti segi sintaksis keduanya perilaku sama. sebuah&#160;syntactic sugar&#160;dari konsep&#160;prototype&#160;yang ada.\nmari lanjut.\ncatatan:ketika sebuah&#160;constructor function&#160;ataupun&#160;class. secara&#160;code convention&#160;(aturan penulisan), pascalcase penamaannya. contohnya&#160;car&#160;daripada&#160;car,&#160;sportcar&#160;daripada&#160;sportcar&#160;atau&#160;sportcar.\ninstance\nsetelah tersebut? sebelumnya, itu&#160;instance? telah ditentukan oleh&#160;blueprint-nya (class), singkatnya realisasi sebuah&#160;blueprint.\nsama seperti&#160;constructor membuat&#160;instance&#160;dari keyword&#160;new.\nclass 'red');\npembuatan dibandingkan pembuatan&#160;instance&#160;wajib menuliskannya, terjadi ini:\nclass 'red'); error:typeerror: cannot be invoked without 'new'*/\nkita sama, tentunya (properti method) propertinya unik 'red');const adamcar car('tesla', 'black'); console.log(johncar.manufacture);console.log(adamcar.manufacture); output:hondatesla*/\nvariabel&#160;johncar&#160;dan&#160;adamcar&#160;merupakan dari&#160;car. properti&#160;manufacture,&#160;color, dan&#160;enginesactive. dibuat.\nconstructor\ndeklarasi sifat menggunakan&#160;function constructor&#160;(seperti sebelumnya). constructor&#160;dalam propertinya, memisahkan constructornya ditempatkan spesial dinamakan&#160;constructor.&#160;\nclass }}\nconstructor&#160;biasanya awal dikirimkan constructor. memerlukan kondisi diinisialisasi.\nkita penggunaan&#160;this&#160;pada konteks keyword&#160;this&#160;merujuk &#160;instance&#160;dari sehingga&#160;this&#160;dapat pada&#160;instance.\ninheritance\ndalam gambaran dunia nyata, punya kemiripan tertentu. motor kendaraan. kendaraan darat motor. membedakan jumlah roda kapasitas penumpang ditampung.\nsama oop, disitulah konsep&#160;inheritance&#160;atau pewarisan diterapkan. mencegah perulangan memahaminya lihatlah bagan berikut:\n\npada class&#160;car,&#160;motorcycle,&#160;plane, dan&#160;helicopter&#160;memiliki seperti&#160;licenseplate,&#160;manufacture, dan&#160;engineactive. seperti&#160;startengines(),&#160;info(), dan&#160;parking().\njika diagram class&#160;car&#160;di constructor(licenseplate, manufacture, wheels) this.licenseplate licenseplate; this.wheels wheels; this.engineactive console.log(`mesin ${this.licenseplate} dinyalakan!`); console.log(`nomor kendaraan: ${this.licenseplate}`); console.log(`mesin: ${this.engineactive droveoff() console.log(`kendaraan melaju!`); opendoor() console.log(`membuka pintu!`); parking() parkir!`); }}\ntidak seperti&#160;motorcycle,&#160;plane, dan&#160;helicopter&#160;maka menuliskan&#160;property&#160;dan&#160;method&#160;yang berulang.&#160;\ndengan teknik&#160;inheritance, nantinya diturunkan sifatnya lain:\n\nketika vehicle melakukan&#160;extends&#160;pada mewarisi sifatnya. pewarisan, super parent child class.\npada mewariskan keyword&#160;extends&#160;seperti berikut:\nclass childclass extends parentclass {}\nsebagai contoh, class&#160;vehicle&#160;yang class.\nclass manufacture) }}\nkemudian, class&#160;car&#160;sebagai dari&#160;vehicle.\nclass super(licenseplate, manufacture); }}\ndengan dalamnya, class&#160;car&#160;juga class&#160;vehicle.\nclass 'active': car('h121s', 'honda', 4);car.startengines(); output:mesin h121s dinyalakan!*/\noiya pada&#160;constructor&#160;class&#160;car, penggunaan&#160;super(), maksudnya? keyword&#160;super&#160;digunakan induk pada&#160;child jadi&#160;super(licenseplate, manufacture)&#160;di mengakses&#160;constructor&#160;dari&#160;parent class&#160;dan mengirimkan&#160;licenseplate, dan&#160;manufacture&#160;sebagai olehnya (instance)&#160;car&#160;berhasil dibuat.\npenggunaan menjalankan&#160;method overriding&#160;pada parent. melakukan&#160;method method&#160;info()&#160;dengan informasi mobil, overriding info */ super.info(); console.log(`jumlah roda: ${this.wheels}`); 4);johncar.info(); output:nomor h121smanufacture: hondamesin: inactivejumlah 4*/\ndalam kelas, membatasinya. maksudnya, b, lalu selanjutnya. nenek orang tua kita.&#160;\nsehingga dilihat dikelompokkan ini:&#160;\n\nstatic method\nseluruh namanya perawatan iya, method&#160;repair&#160;untuk memperbaiki analogi mengalami kerusakan diperbaiki bengkel (factory), berperan factory, sebutlah tersebut&#160;vehiclefactory. kelas&#160;vehiclefactory&#160;terdapat method&#160;repair()&#160;yang parameternya.&#160;\nclass */} car, motorcycle, dsb. vehiclefactory repair(vehicles) vehicles.foreach(vehicle ${vehicle.licenseplate} perawatan`) }}\nuntuk classnya dahulu. memanggil&#160;repair(), class&#160;vehiclefactory.\nconst 4);const tommotor motorcycle('gf121j', 'yamaha', 2);const dimascar car('ta1408k', 'tesla', 4); repair vehiclefactory();vehiclefactory.repair([johncar, tommotor, dimascar]); output:kendaraan perawatankendaraan gf121j ta1408k perawatan*/\nkode efektif. mengapa? membuat&#160;instance&#160;untuk sekedar class-nya membuat&#160;instance&#160;adalah terbentuk blueprint tidak? sebuah&#160;static method. static sendiri.\npada method-nya:\nclass /*kode }}\nkemudian methodnya panggil class&#160;vehiclefactory&#160;kemudian&#160;repair().\nconst pemanggilan */vehiclefactory.repair([johncar, perawatan*/\nlatihan: class\nselamat! biasa. finder.\nkita menyerupai menggunakan&#160;constructor berasal tergolong &#8220;ribet&#8221; melakukan&#160;inheritance&#160;yang unggul class.\nnah, finder, menemukan &#160;function adalah&#160;datasource&#160;yang berkas&#160;data-source.js.\ntugas constructor&#160;datasource&#160;dengan class.\ngood luck!\nsettimeout\nfungsi&#160;settimeout()&#160;merupakan dijalankan asynchronous. parameter. asynchronous, nilai&#160;number&#160;dalam&#160;milisecond&#160;sebagai tunggu dijalankan. penggunaannya ini:\nconsole.log('selamat datang!'); settimeout(() console.log('terimakasih mampir, datang kembali!')}, 3000); console.log('ada dibantu?');\njika mengenal program synchronous, membayangkan berikut.\nmencetak selamat datang!menunggu detikmencetak terima kasih kembali!mencetak dibantu?\nnamun nyatanya&#160;settimeout()&#160;tidak menghentikan eksekusi berikutnya. urutannya datang!mencetak dibantu?menunggu terimakasih kembali!\njika dijalankan, menampilkan berikut:\nfungsi onfulfilled onrejected\nuntuk menangani oleh&#160;resolve()&#160;ketika promise onfulfilled, method&#160;.then()&#160;pada buat. method&#160;.then()&#160;kita berikan sebagai&#160;handle callback. executorfunction (resolve, reject) iscoffeemakerready (iscoffeemakerready) resolve('kopi dibuat'); reject('mesin kopi digunakan!'); }}; handlersuccess resolvedvalue console.log(resolvedvalue);} makecoffee promise(executorfunction);makecoffee.then(handlersuccess); output:kopi dibuat*/\nmari bedah atas:\nmakecoffee resolve() âkopi dibuatâ.lalu handlersuccess() parameternya.kemudian .then() parameternya.ketika terpenuhi (fulfilled), terpanggil dibawa resolve(). âkopi dibuatâ.\nnamun kondisi&#160;rejected? oleh&#160;reject()?\nkita kedua&#160;handle callback&#160;baik&#160;onfulfilled&#160;atau&#160;onrejected&#160;pada method&#160;.then(), handle callback untuk&#160;onfulfilled&#160;disimpan ini:\nmakecoffee.then(handlersuccess, handlerrejected);\ndengan kondisi&#160;rejected.\nconst coffee console.log(coffee);}; handlerrejected rejectionreason console.log(rejectionreason)}; promise(executorfunction);makecoffee.then(handlersuccess, handlerrejected); digunakan!*/\npromise all\nmateri situasi terdapat&#160;asynchronous process&#160;yang saling melaksanakan tugasnya. sekaligus? menggunakan&#160;promise.all().\nkita sering pergi cafe menikmati secangkir bersama teman kuliah rekan kerja. memesan kopi, bersamaan. pesan pelayan menghidangkannya berbarengan pesan. teknik&#160;promise.all().\nmethod&#160;promise.all()&#160;dapat (dalam array) parameternya. tetapkan array.\ncontohnya arabicaorder promise(resolve arabika selesai!'); 4000); });}; robustaorder robusta 2000); libericaorder liberica promises [arabicaorder(), robustaorder(), libericaorder()]; promise.all(promises) .then(resolvedvalue console.log(resolvedvalue); output:['kopi selesai!', 'kopi selesai!']*/\nketika dieksekusi, menunggu detik ditampilkan. menunjukan bahwa&#160;promise.all()&#160;akan selesai dijalankan.\nurutan dihasilkan tentukan parameternya\nconst });\nnilai pembuatannya lama.&#160;\nmenangani onrejected async/await\nperlu jadi await (onfulfilled). gagal (onrejected)? lagi prinsip&#160;synchronous code. tolakan menggunakan&#160;try...catch.\nketika async/await, biasakan menggunakan&#160;try&#160;saat resolved berikut:\nasync makecoffee() try getcoffee(); console.log(coffee); block&#160;catch&#160;untuk (onrejected).\nasync catch (rejectedreason) console.log(rejectedreason); makecoffee(); output:biji habis!*/\nlatihan: promise\nselamat! finder.\npada datasource, pengguna.&#160;\nclass constructor(onsuccess, onfailed) this.onsuccess onsuccess; this.onfailed onfailed; searchclub(keyword) filteredclubs clubs.filter(club club.name.touppercase().includes(keyword.touppercase())); (filteredclubs.length) this.onsuccess(filteredclubs); this.onfailed(`${keyword} found`); }}\nkarena memanfaatkannya. callback&#160;onsuccess&#160;dan&#160;onfailed&#160;lagi. penggunaan&#160;resolve&#160;dan&#160;reject&#160;pada promise.\ntugas penerapan&#160;callback function&#160;dengan promise.&#160;\ngood ya!\nsolusi: promise\napakah promise? bersama-sama.\nlangkah class&#160;datasource. hapus memuat }}\nsehingga class&#160;datasource&#160;akan beserta class-nya, method&#160;searchclub&#160;dapat dari&#160;datasource&#160;tanpa membuat&#160;instance.&#160;\nmasih ingat melakukannya? instance, keyword&#160;static&#160;sebelum method-nya.\nclass }}\nsetelah method&#160;searchclub&#160;mengembalikan promise((resolve, }}\njangan lupa callback&#160;onsuccess()&#160;dan&#160;onfailed(), menggunakan&#160;resolve()&#160;dan&#160;reject(). resolve(filteredclubs); reject(`${keyword} }}\nnamun sampai sini. method&#160;searchclub&#160;menjadi&#160;static&#160;dan mengubah&#160;callback&#160;menjadi penyesuaian digunakan.\npada fungsi&#160;onbuttonsearchclicked&#160;ini:\nconst datasource.searchclub(searchelement.value);};\nmenjadi datasource.searchclub(searchelement.value) .then(renderresult) .catch(fallbackresult);};\natau suka fungsi&#160;onbuttonsearchclicked&#160;berjalan asynchronous async renderresult(result); fallbackresult(message); }};\npromise diterapkan! berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/107-club-finder-promise-solution\nekspor node.js\npada pengenalan disebutkan mengekspor nilai. melakukannya?\nsebenarnya diekspor tetaplah satu, }. contohnya, tambahkan variabel&#160;iscoffeemakerready&#160;pada berkas&#160;state.js.\nconst coffeestock arabica: 100, robusta: 150, liberica: 200,}; true;\nlantas mengeksport (coffeestock,&#160;iscoffeemakerready) ini:\nmodule.exports coffeestock;module.exports iscoffeemakerready;\nnamun literal {coffeestock, iscoffeemakerready};\nsehingga nilai&#160;module&#160;pada console, exports objek&#160;coffeestock&#160;dan variabel&#160;iscoffeemakerready.\nmodule id: '.', exports: coffeestock: 200 iscoffeemakerready: true parent: null, filename: '/home/runner/163-02-multiple-export-nodejs/state.js', loaded: false, children: [], paths: '/home/runner/163-02-multiple-export-nodejs/node_modules', '/home/runner/node_modules', '/home/node_modules', '/node_modules' ]}\nlalu impor materi&#160;destructuring object? berkas&#160;index.js, ini:\nindex.jsstate.js\nconst iscoffeemakerready} require('./state.js'); console.log(coffeestock);console.log(iscoffeemakerready); output:{ }true*/\nstate.js\nconst module.exports iscoffeemakerready};\nnamun ingat, menggunakan&#160;destructuring object, tidak, menghasilkan&#160;undefined.\nes6 module\njika environment ekspor module import export es6.\nsebelum adanya tag&#160;&#60;script&#62;&#160;pada semakin digunakan, tag&#160;&#60;script&#62;&#160;dituliskan. import, tag&#160;&#60;script&#62;&#160;yang utama (biasanya diberi nama&#160;main.js,&#160;app.js, atau&#160;index.js).\npada fitur&#160;es6 module&#160;standarnya diaktifkan mengaktifkan attribute&#160;type=&#8221;module&#8221;&#160;pada gunakan.\n&lt;script src=\"app.js\" type=\"module\"&gt;&lt;/script&gt;\ntidak setidaknya mendukung modules. detailnya:\ngoogle chrome: 61+mozilla firefox: 60+safari: 10.1+microsoft edge: 16+\nsolusi: module\napakah finder? berkas&#160;index.html, kecuali&#160;app.js.\n&lt;script src=\"src/script/data/clubs.js\"&gt;&lt;/script&gt;&lt;script src=\"src/script/data/data-source.js\"&gt;&lt;/script&gt;&lt;script src=\"src/script/view/main.js\"&gt;&lt;/script&gt;&lt;script src=\"app.js\"&gt;&lt;/script&gt;\nmenjadi:\n&lt;script src=\"app.js\"&gt;&lt;/script&gt;\nlalu attribute&#160;type&#160;dengan &#8220;module&#8221; tag&#160;&#60;script&#62;.\n&lt;script type=\"module\"&gt;&lt;/script&gt;\nkemudian javascript-nya. berkas&#160;clubs.js. pada&#160;clubs.js&#160;kita gunakanlah&#160;export default&#160;untuk clubs.\ntambahkan berkas&#160;clubs.js:\nexport clubs;\nselanjutnya class&#160;datasource&#160;yang kodenya:\nexport datasource;\nnilai terakhir fungsi&#160;main&#160;yang kodenya.\nexport main;\nsetelah digunakan. javascript.\nyang berkas&#160;data-source.js&#160;membutuhkan clubs module&#160;clubs.js. mengimpor kode&#160;data-source.js.\nimport from './clubs.js';\nyang class&#160;datasource&#160;digunakan berkas&#160;main.js&#160;sehingga mengimpor&#160;datasource&#160;pada module&#160;data-source.js. berkas&#160;main.js:\nimport '../data/data-source.js';\ndan berkas&#160;app.js&#160;kita nilai&#160;main&#160;dari module&#160;main.js. berkas&#160;app.js:\nimport './src/script/view/main.js';\nsetelah module, kemungkinan eror:\naccess script at 'file:///....../clubfinder/app.js' origin 'null' blocked by cors policy: cross requests are only supported protocol schemes: http, data, chrome, chrome-extension, https.\nerror menggunakan&#160;import, tunduk terhadap peraturan cors. nanti detail request. singkatnya, membuka berkas&#160;index.html&#160;secara langsung. local http server (dijalankan localhost).\njika menginstalnya, package&#160;http-server&#160;yang berikut:&#160;https://www.npmjs.com/package/http-server. menggunakannya, memasang extensions code digunakan.\nvisual vscode âlive serverâ localhost. panduan berikut: https://code.visualstudio.com/docs/editor/extension-galleryatom atom âatom-live-serverâ https://flight-manual.atom.io/using-atom/sections/atom-packages/bracket bracket. localhost live preview tersebut.\nlangkah berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/108-club-finder-module-solution\nrangkuman 6\nuntuk memperdalam mengingat materi-materi penulis rangkuman mempermudah review dipelajari.\nsejarah javascriptjavascript 1995. bukanlah livescript.javascript lisensi.terkadang manufacturerâs (ecma).terdapat javascript:2000 2010: popular pengembangan. dihentikan.2009: diriliskan hal-hal non-kontroversial2015: (es6) hadir besar, ke-empat.2016 pembaharuan-pembaharuan kecil minor.deklarasi variablevariabel wadah suatu informasi.cara variabelnyavar global. menyebabkan terangkatnya dinamakan hoistingconst disarankan re-initialization.let memungkinkan re-initialization (inisialisasi ulang)template literalstemplate kompleks.penerapan single quote double quote, simbol backtick (`), diawal diakhir.dalam literal, ditampilkan nilainya.template membaca line space escape character. contoh: â\\nâ.destructuring arraydestructuring properti-properti kecil.destructuring object:dilakukan value obyek. nama-nama harusnya obyek.destructuring array:dilakukan ], array.nilai diterima item-item item, menyesuaikan itemnya mengisi (dikosongkan).destructuring re-assignment destructuring.spreading parameterspreading pembentangan array-nya.rest menyatukan operator.penerapan tiitk (...) iterable object-nya. ...arrays;.fitur satu.rest sisanya baru.arrow sederhana.penulisan panah, kanan (&gt;). diletakkan panah. apapun, mengisinya underscore biasa.selain (expression) sederhana.arrow this. bernilai atasnya, dimana beradadefault parameterdefault terhindar undefined.classclass obyek.blueprint dianalogikan kemampuan.sebelum berorientasi obyek.deklarasi statement. berisikan method-method dibutuhkan.biasanya supaya dimanipulasi getter/setter properti. umumnya. getter cara: mycar.brand, mengatur memanipulasi setter mycar.brand âtoyotaâ.untuk classnya. myclass();.standarnya pascalcase.inheritanceinheritance kemampuan pewarisnya (child class).inheritance pembuka classnya.static methodstatic instansiasi pemanggilannya methodnya.pembuatan sendiri.promisepromise asyncronous alternatif chaining then(). kondisi, pending (sedang diproses), fulfilled (terpenuhi), rejected (gagal dipenuhi).untuk promise. memasukkan resolver executor otomatis dipanggil.resolver opsional, reject() resolve berhasil. reject terpenuhi. terpanggil, berubah filfilled. rejected.untuk fulfilled, diteruskan then. catch.promise berantaipromise berantai. hell. melakukannya, then().promise allpromise all sekaligus. mencapainya, all() berisi promise.hasil dikeluarkan bebarengan. semua bebarengan.async/awaitasync/await mengatasi syncronous.untuk kamu function.teknik 2017 (es8)untuk penanganan try/catch. catch.untuk berantai mengurutkannya depannya.modulemodule membagi bagian. awalnya pembagian penggabungan tag disusun. peletakkannyapun rentan.javascript dsb.dalam ekspor. nilai.dalam dibebaskan. relative path dituju. named diatasi object.javascript reusable.javascript atribut element type module\nweb components\napa component\nweb component ditetapkan world wide consortium (w3c). komponen ui websitenya modular.\n\ndengan pesatnya perkembangan website, modern website. mampu ulang. kebanyakan ui.&#160;\nnamun kelebihan framework?\nstandard w3c reusable.compatibility standard angular, react, vue.simple konfigurasi khusus layaknya js/css/html murni.\nweb bersifat&#160;reusable. sekalipun. pasal? js/html/css murni. api component, yakni:\ncustom elements: (custom element). kebutuhan.shadow dom: terenkapsulasi gangguan luar. custom element, terpengaruh styling elemen-nya.\ncustom element\nhtml kemudahan untungnya sepakat menggunakannya. kelas&#160;belajar web&#160;kita website.&#160;\nada tags manfaatkan html5 hampir 100 gunakan? banyaknya tersedia, arti (semantic meaning).\nuntuk arti, tepat html5, pembentuk layout tag&#160;&#60;div&#62;, header, main, footer, article, aside (konten samping).\n\nsetelah dikenalkan html). elemen-elemen peran tersebut.\n\nelement&#160;&#60;div&#62;&#160;memang mencakup tersedia. menyiasati tag&#160;&#60;div&#62;&#160;dengan atribut&#160;id&#160;ataupun&#160;class&#160;untuk fungsinya. atributnya, sendirilah mengetahuinya.\nnamun sekarang, elemen&#160;&#60;div&#62;&#160;pada diminimalisir lagi. dibaca mudah.\n(kiri) tag&#160;&#60;div&#62;. (kanan) element.\ndengan rapi demikian, dom kebutuhan. gambar atas.\natribut element\npotongan ini:&#160;https://codesandbox.io/s/163-6980-atribut-dan-method-pada-custom-element-rftd0e\nselain siklus hidup, htmlelement dom. seperti&#160;innerhtml,&#160;innertext,&#160;appendchild(),&#160;remove(), sebagainya. element. imagefigure connectedcallback() this.src this.getattribute('src') || null; this.alt this.getattribute('alt') this.caption this.getattribute('caption') this.innerhtml &lt;figure&gt; src=\"${this.src}\" alt=\"${this.alt}\"&gt; &lt;figcaption&gt;${this.caption}&lt;/figcaption&gt; &lt;/figure&gt; `; customelements.define('image-figure', imagefigure);\ndari element&#160;&#60;image-figure&#62;&#160;tampak dom, atribut&#160;src,&#160;alt, dan&#160;caption. elemen&#160;&#60;figure&#62;&#160;dengan memanfaatkan&#160;innerhtml.\nuntuk bedanya elemennya, javascript.\ntag-htmljavascript\n&lt;image-figure src=\"https://i.imgur.com/ijq78xh.jpg\" alt=\"dicoding logo\" caption=\"huruf g logo dicoding\"&gt;&lt;/image-figure&gt;\njavascript\nconst imagefigureelement document.createelement('image-figure'); imagefigureelement.setattribute('src', 'https://i.imgur.com/ijq78xh.jpg');imagefigureelement.setattribute('alt', 'dicoding logo');imagefigureelement.setattribute('caption', 'huruf dicoding'); document.body.appendchild(imagefigureelement);\njika hasilnya, ini:\ndengan elemen&#160;&#60;figure&#62;&#160;tanpa element&#160;&#60;img&#62;&#160;dan&#160;&#60;figcaption&#62;&#160;di dibutuhkan. kerennya elemen? baru, ada.&#160;\nmengamati atribut\npotongan ini:&#160;https://codesandbox.io/s/163-6987-mengamati-nilai-atribut-zw71q6\nketika mengganti atributnya diperbaharui. standar, element? sama? bersama.\npada element&#160;&#60;image-figure&#62;&#160;yang element&#160;&#60;figure&#62;&#160;dengan ini:\nindex.htmlimage-figure.js\n&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; name=\"viewport\" content=\"width=device-width\"&gt; &lt;title&gt;attribute observe&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;image-figure dicoding\"&gt; &lt;/image-figure&gt; &lt;script src=\"image-figure.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\nlalu ini:\nlalu, atribut&#160;caption&#160;dengan browser.\nconst document.queryselector('image-figure');element.setattribute('caption', 'lorem ipsum dolor sit amet');\nkita gif caption, berubah. kok mengimplementasi kelasnya (imagefigure) mengobservasi fungsi&#160;attributechangedcallback, fungsi&#160;static get observedattributes.\nkedua terhubung. fungsi&#160;attributechangedcallback&#160;akan diamati fungsi&#160;observedattributes&#160;diubah fungsi&#160;attributechangedcallback&#160;inilah perubahan. (tiga) dimanfaatkan yaitu:\nname berubaholdvalue diubahnewvalue atribut.\nurutan argumen sangatlah penting, tertukar.&#160;sebenarnya argumennya gunakan&#160;name,&#160;oldvalue,&#160;newvalue&#160;guna penggunaannya.\nberikut tersebut:\nclass this.render(); render() attributechangedcallback(name, oldvalue, newvalue) this[name] newvalue; observedattributes() ['caption']; imagefigure);\nmari kodenya persatu. fungsi&#160;attributechangedcallback(), tuliskan properti&#160;this[name]&#160;dengan ditetapkan.&#160;this[name]&#160;ini dinamis diubah. misalkan atribut&#160;&#8220;caption&#8221;&#160;maka nilai&#160;this[&#8220;caption&#8221;], atribut&#160;&#8220;alt&#8221;&#160;maka nilai&#160;this[&#8220;alt&#8221;].\nsetelah fungsi&#160;render(). rendering terpisah di&#160;connectedcallback). tujuannya data.\nlalu juga&#160;static observedattributes(). fungsinya? fungsi&#160;getter&#160;statis &#8220;seseorang&#8221; mengamati ditentukan. perubahan, memanggil&#160;attributechangedcallback&#160;dengan memberitahu berubah, serta ditetapkan.&#160;observedattributes&#160;tidak kembaliannya diamati.\nreturn ['caption'];\nnilai kembalian dari&#160;observedattributes&#160;merupakan atribut, literals.\nreturn ['caption', 'src', 'alt'];\nsetelah tadi bereaksi atribut.\nlatihan: finder\ndi latihan finder. bagus baiknya lagi.\njika seksama, berpotensi dijadikan yaitu:\napp bar identitas web.search &lt;input&gt; &lt;button&gt; input pengguna.club list pencarian, menampilkannya list.club list. gambar, nama, deskripsi club.\ntugas modular reusable poin-poin atas.\njika stuck melanjutkan solusi, tanyakan hadapi ya.\ngood luck!&#160;\nsolusi: search-bar component\npembuatan elemen&#160;&#60;search-bar&#62;&#160;lebih rumit sebelumnya. search element&#160;&#60;input&#62;&#160;dan&#160;&#60;button&#62;. kombinasi club. sebisa element&#160;&#60;search-bar&#62;&#160;sehingga kala tersebut.\nmari nama&#160;search-bar.js. class&#160;searchbar&#160;dengan sifat&#160;htmlelement.\nclass searchbar {}\nkemudian method&#160;connectedcallback()&#160;dan fungsi&#160;render().\nclass {} {}}\nlalu, fungsi&#160;render()&#160;di dalam&#160;connectedcallback().\nclass {}}\ndi fungsi&#160;render()&#160;kita ambil berkas&#160;index.html. berikut.\n&lt;div id=\"search-container\" class=\"search-container\"&gt; &lt;input placeholder=\"search football club\" id=\"searchelement\" type=\"search\"&gt; &lt;button id=\"searchbuttonelement\" type=\"submit\"&gt;search&lt;/button&gt;&lt;/div&gt;\nagar lakukan&#160;copy&#160;seluruh dan&#160;paste&#160;untuk nilai&#160;this.innerhtml&#160;di type=\"submit\"&gt;search&lt;/button&gt; &lt;/div&gt; }}\ndikarenakan elemen&#160;&#60;button&#62;&#160;yang event ditekan, menyediakan&#160;setter. gunanya class&#160;searchbar.\nclass set clickevent(event) this._clickevent event; }}\nlalu, terapkan&#160;this._clickevent&#160;sebagai handler element&#160;&#60;button&#62;&#160;dengan fungsi&#160;render():\nthis.queryselector('#searchbuttonelement').addeventlistener('click', this._clickevent);\nsehingga render ini:\nrender() this.queryselector('#searchbuttonelement').addeventlistener('click', this._clickevent);}\ndengan button (event click) melalui&#160;setter accessor&#160;di&#160;searchbar. berkas&#160;main.js.\npada memanfaatkan&#160;value&#160;dari element&#160;&#60;input&#62;&#160;untuk kata kunci nilai&#160;value&#160;dari elemen&#160;&#60;input&#62;&#160;yang bar, elemen&#160;&#60;input&#62;&#160;tersebut.\nget value() this.queryselector('#searchelement').value;}\nsehingga keseluruhan berkas&#160;search-bar.js&#160;akan this.queryselector('#searchelement').value; this._clickevent); }}\nlalu berkasnya, definisikan dom.\nclass customelements.define('search-bar', searchbar);\nyeay, selesai. menggunakannya! membentuk tag&#160;&#60;search-bar&#62;. berkas&#160;index.html&#160;kemudian berikut:\n&lt;div type=\"submit\"&gt;search&lt;/button&gt;&lt;/div&gt;\nmenjadi ini:\n&lt;search-bar&gt;&lt;/search-bar&gt;\nsetelah berkas&#160;src view main.js&#160;dan sesuaikan binding document.queryselector('#searchelement');\ndengan selector-nya &#8220;search-bar&#8221;.\nconst document.queryselector('search-bar');\nlalu variabel&#160;buttonsearchelement&#160;karena melalui&#160;searchelement. document.queryselector('#searchbuttonelement');\nkemudian click berikut:\nbuttonsearchelement.addeventlistener('click', onbuttonsearchclicked);\nmenjadi:\nsearchelement.clickevent onbuttonsearchclicked;\nterakhir, berkas&#160;main.js&#160;memerlukan berkas&#160;search-bar.js&#160;tereksekusi, berkas&#160;search-bar.js&#160;pada ini:\nimport '../component/search-bar.js';\ntuliskan berkasnya '../component/search-bar.js';import '../data/data-source.js'; document.queryselector('search-bar'); results results.foreach(club {name, fanart, description} club; class=\"placeholder\"&gt;${message}&lt;/h2&gt;`; searchelement.clickevent onbuttonsearchclicked;}; main;\nterakhir, proyeknya menggunakan&#160;local server&#160;dan &#8220;arsenal&#8221;. tampilan berikut:\nsolusi: club-list club-item component\ncustom adalah&#160;&#60;club-list&#62;&#160;dan&#160;&#60;club-item&#62;. mengenai&#160;nested dengan&#160;nested element.\nmari awali &#8220;club-list.js&#8221; &#8220;club-item.js&#8221; pada&#160;src component.&#160;\nmembuat &#60;club-list&#62; element\nlangkah element&#160;&#60;club-list&#62;&#160;terlebih berkas&#160;club-list.js, class&#160;clublist&#160;dengan clublist 2 (dua) yaitu&#160;setter clubs, dan&#160;render.\nclass clubs(clubs) {}}\nfungsi&#160;set clubs&#160;digunakan properti&#160;this._clubs&#160;pada nantinya, fungsi&#160;render()&#160;dalam element&#160;&#60;club-item&#62;.\nset this._clubs clubs; this.render();}\nkemudian fungsi&#160;render, fungsi&#160;foreach&#160;pada properti&#160;this._clubs. iterasinya (perulangannya), element&#160;&#60;club-item&#62;&#160;secara elemen&#160;&#60;club-item&#62;&#160;yang terbuat menjadi&#160;child&#160;element&#160;dari element&#160;&#60;club-list&#62;&#160;ini. fungsi&#160;render&#160;akan this._clubs.foreach(club clubitemelement document.createelement('club-item'); clubitemelement.club this.appendchild(clubitemelement); });}\nperlu kegagalan ditemukkan. nama&#160;rendererror()&#160;dengan eror/alasan ditampilkan.\nrendererror(message) {}\nuntuk ditampilkan, copy fungsi&#160;fallbackresult()&#160;pada main.js.\nclublistelement.innerhtml '';clublistelement.innerhtml class=\"placeholder\"&gt;${message}&lt;/h2&gt;`;\nlalu paste fungsi&#160;rendererror()&#160;dan ubah&#160;clublistelement.innerhtml&#160;menjadi&#160;this.innerhtml.\nrendererror(message) class=\"placeholder\"&gt;${message}&lt;/h2&gt;`;}\npada berkas&#160;club-list.js&#160;jangan dom.\ncustomelements.define('club-list', clublist);\noh ya! elemen&#160;&#60;club-item&#62;&#160;(kita pada&#160;club-item.js), berkas&#160;club-item.js&#160;ke berkas&#160;club-list.js&#160;ini. menambah ini.\nimport './club-item.js';\nsehingga club-list.js './club-item.js'; rendererror(message) customelements.define('club-list', clublist);\npembuatan element&#160;&#60;club-list&#62;&#160;selesai! elemen&#160;&#60;club-item&#62;.\nmembuat &#60;club-item&#62; element\npada berkas&#160;club-item.js, class&#160;clubitem&#160;dengan htmlelement.\nclass clubitem deklarasikan fungsi&#160;setter club&#160;dan fungsi&#160;render.\nclass club(club) {}}\nfungsi setter&#160;club&#160;berfungsi nilai&#160;club&#160;ke properti&#160;this._club&#160;yang fungsi&#160;render&#160;untuk pencarian. fungsi&#160;setter&#160;club&#160;menjadi this._club {}}\nlalu lakukan&#160;copy&#160;template fungsi&#160;renderresult&#160;di main.js.\nclubelement.innerhtml &lt;/div&gt;`;\nkemudian, lakukan&#160;paste&#160;template properti&#160;this.innerhtml&#160;di pada&#160;html template&#160;menjadi src=\"${this._club.fanart}\" &lt;h2&gt;${this._club.name}&lt;/h2&gt; &lt;p&gt;${this._club.description}&lt;/p&gt; properti&#160;this._club-lah disimpan.\nkemudian berkas&#160;club-item.js&#160;jangan customelements.define('club-item', clubitem);\ndengan elemen&#160;&#60;club-item&#62;&#160;sudah digunakan.\nmenggunakan element\nsetelah dibutuhkan, menggunakannya!\nsilakan penerapan&#160;club list&#160;menggunakan elemen&#160;&#60;div&#62;&#160;berikut:\n&lt;div id=\"clublist\"&gt;&lt;/div&gt;\nmenjadi:\n&lt;club-list&gt;&lt;/club-list&gt;\nselanjutnya, main.js. selector binding&#160;clublistelement. document.queryselector('#clublist');\nmenjadi:\nconst document.queryselector('club-list');\nlalu fungsi&#160;renderresult. });};\nkita menggantinya clublistelement.clubs results;};\nsesuaikan fungsi&#160;fallbackresult, fungsi&#160;rendererror()&#160;pada&#160;clublist, clublistelement.rendererror(message);};\nkarena elemen&#160;&#60;club-list&#62;&#160;pada berkas&#160;club-list.js&#160;pada berkas&#160;main.js.\nimport '../component/club-list.js';\ndengan berkas&#160;main.js&#160;akan berikut:\nimport '../component/club-list.js';import document.queryselector('club-list'); results; clublistelement.rendererror(message); main;\nsekarang server&#160;lalu tekan tombol voila, hasilnya:\nops, daftar berantakan. styling-nya juga. style clublist.css. selector&#160;#clublist&#160;menjadi&#160;club-list&#160;dan selector&#160;.club&#160;menjadi&#160;club-item.\nclub-list margin-top: 32px; width: 100%; padding: 16px;} &gt; .placeholder font-weight: lighter; color: rgba(0, 0, 0.5); -webkit-user-select: none; -moz-user-select: -ms-user-select: user-select: none;} margin-bottom: 18px; box-shadow: 0 4px 8px 0.2); border-radius: 10px; overflow: hidden;} .fan-art-club max-height: 300px; object-fit: cover; object-position: center;} .club-info 24px;} h2 lighter;} p hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 10; lines show */}\nkemudian display selector&#160;club-list&#160;dan&#160;club-item.\nclub-list block; /*...*/} /*...*/ /*...*/\nsehingga berkas&#160;clublist.css&#160;akan ini:\nclub-list */}\nsekarang server. kini semuanya baik.\nlangkah berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/109-club-finder-custom-element-solution\npenggunaan shadow component\npotongan ini:https://codesandbox.io/s/163-7064-shadow-dom-in-web-component-0rqu94\nuntuk enkapsulasi element,&#160;shadow dom&#160;berperan membuat&#160;web component&#160;(hal oleh&#160;w3c). menerapkan&#160;shadow dom&#160;pada pada&#160;document tree, bila element?\njawabannya mudah! materi&#160;styling dom\nindex.htmlimage-figure.js\n&lt;!doctype &lt;title&gt;styling dom&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"style.css\"/&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- image-figure mempengaruhi luarnya --&gt; logo\"/&gt; &lt;figcaption&gt;huruf dicoding&lt;/figcaption&gt; src=\"image-figure.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\nindex.htmlimage-figure.js\nclass &lt;style&gt; figure border: thin #c0c0c0 solid; flex; flex-flow: column; 5px; max-width: 220px; margin: auto; img figcaption background-color: #222; #fff; font: italic smaller sans-serif; 3px; text-align: center; &lt;/style&gt; imagefigure);\nketika komponen&#160;&#60;figure&#62;&#160;yang element.\nkita komponen&#160;imagefigure&#160;atau tag&#160;&#60;image-figure&#62;&#160;saja. yup, wajar menetapkan&#160;shadow dom&#160;sehingga berdampak luarnya.\ndalam melampirkan&#160;shadow biasanya, menggunakan&#160;attachshadow. ini.\nclass constructor() super(); this._shadowroot this.attachshadow({mode: 'open'}); //.....}\nsupaya nilai&#160;shadowroot&#160;dapat fungsi&#160;attachshadow()&#160;ke properti&#160;_shadowroot&#160;melalui nama&#160;_shadowroot&#160;untuk memudahkan.&#160;\nlalu, penamaannya depannya? jawabannya, keyword&#160;this&#160;pada (class imagefigure) bernama&#160;shadowroot. properti&#160;_shadowroot&#160;asli buat, mode&#160;closed&#160;pada&#160;shadow properti&#160;shadowroot&#160;akan mengembalikan&#160;null, mengakses&#160;shadow tree.\nsetelah dom&#160;pada&#160;constructor, apapun dari&#160;dom&#160;kita melalui&#160;_shadowroot. langsung&#160;this.innerhtml, melalui&#160;this._shadowroot.innerhtml. fungsi&#160;render()&#160;menjadi this._shadowroot.innerhtml `;}\ndengan sekarang&#160;styling&#160;pada sebaliknya,&#160;styling&#160;yang komponen.\nlatihan: penerapanya, terganggu komponennya.\ntugas finder.\njika mengalami&#160;stuck&#160;sebelum luck!&#160;\npackage manager\npendahuluan package manager\ndalam industri module/package cepat. kompleks sinilah sebuah&#160;package manager.\npackage manager tools dependencies library. dengan&#160;package manager&#160;juga kita. dikonsumsi publik.\nhampir memiliki&#160;package manager-nya masing-masing. maven gradle, php composer, python pip. lalu, javascript? punya! npm satu&#160;package package. npm, yarn sebagai&#160;package manager.&#160;\nkeduanya, merupakan&#160;package manager&#160;yang baik. saja, npm. disediakan node.js.\napa manager\nnpm pengelola pada&#160;npmjs.com. terpasang kita.&#160;\nwalaupun dibundel paham dahulu node.js&#160;runtime&#160;ataupun&#160;node application&#160;untuk ranah development jquery, package/framework development. esensialnya skill mahir menggunakanya.\nberbicara berbagi menggunakannya lain, module. ditulis, 1,204,963 manfaatkan.\nsudah npm? pasang kita.\nmembuat npm\nsetelah perintah kita? lokal, berkas&#160;package.json. nanti.\nuntuk berkas&#160;package.json&#160;sebenarnya berkas&#160;package.json&#160;sebaiknya perintah&#160;npm init&#160;pada terminal berkas&#160;package.json&#160;bersama-sama.\npertama root beri &#8220;webclock&#8221;. contohkan code.\nkemudian terminal/command prompt menu&#160;terminal terminal. perintah\nnpm init\nuntuk code, usungan os anda, lokasinya proyek.\nsetelah pertanyaan package&#160;name,&#160;version,&#160;description. buat.\nnilai default. harapkan, menekan tombol&#160;enter.\nsetelah diberikan, diberitahu berkas&#160;package.json.\njika sesuai, tombol&#160;enter. berkas&#160;package.json&#160;berhasil kita.\nlangkah berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/201-web-clock-initial-project\nmemasang package.json\nberkas&#160;package.json&#160;merupakan node application. manifest deskripsi, versi,&#160;author,&#160;remote repository, lainnya. modules kita.&#160;\npada&#160;dependencies modules&#160;kita melihat&#160;modules&#160;apa aplikasi, module/library jquery terdaftar objek&#160;dependencies&#160;di perintah&#160;install&#160;kemudian package-nya.&#160;\nmari proyek&#160;webclock. jalankan terminal:\nnpm install jquery\nketika pemasangan dipasang, ini:\nkita pada&#160;package.json. digunakan.\n\"dependencies\": \"jquery\": \"^3.4.1\"}\nketika lainnya, contoh&#160;moment.js.\nnpm moment\nmaka juga.\n\"dependencies\": \"^3.4.1\", \"moment\": \"^2.24.0\"}\nselain berkas&#160;package.json, &#8220;node_modules&#8221; memasang&#160;package. pasang.\nsebenarnya tipe objek&#160;dependencies, objek&#160;devdepedencies. perbedaannya?\nobjek&#160;dependencies&#160;merupakan aplikasi. didaftarkan vue, &lt;package-name&gt; \nseperti sebelumnya.\nsedangkan objek&#160;devdependecies&#160;digunakan mendaftarkan seperti&#160;http-server, atau&#160;package&#160;yang membundel seperti&#160;webpack. sebagai&#160;devdependencies&#160;kita perintah&#160;\nnpm --save-dev\njadi package&#160;http-server&#160;sebagai&#160;devdependencies, berikut:\nnpm http-server --save-dev\nmaka package&#160;http-server&#160;akan objek&#160;devdependencies.\n\"dependencies\": \"^2.24.0\"},\"devdependencies\": \"http-server\": \"^0.12.1\"}\nlangkah berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/202-webclock-installing-package\nmenggunakan browser\nyes! pada&#160;dependencies&#160;dan&#160;devdependencies. sejatinya dipasang diperuntukkan application application, mengimpornya moment require('moment');\nnamun pada&#160;environment&#160;node.js, impor&#160;node package&#160;pada tambahan webpack mempelajarinya selanjutnya).\ntapi lama tag&#160;&#60;script&#62;. berkas&#160;index.html&#160;dengan html-nya moment.js tag&#160;&#60;script&#62;.\n&lt;!doctype &lt;title&gt;clock web&lt;/title&gt;&lt;/head&gt;&lt;body&gt; src=\"node_modules/moment/moment.js\"&gt;&lt;/script&gt; src=\"node_modules/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\ndengan mari, nama&#160;index.js. berikut.\nconst displaytime moment.locale('id'); $('.time').text(moment().format('lts')); $('.date').text(moment().format('ll'));}; updatetime displaytime(); settimeout(updatetime, 1000);}; updatetime();\nkemudian, element&#160;&#60;body&#62;&#160;berkas&#160;index.html, waktu, jam tanggal. element&#160;&#60;body&#62;, berkas&#160;index.js&#160;yang tadi. berkas&#160;index.html&#160;akan berikut.\n&lt;!doctype class=\"clock\"&gt; &lt;span class=\"time\"&gt;&lt;/span&gt; class=\"date\"&gt;&lt;/span&gt; src=\"node_modules/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt; src=\"index.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\njika berikut.\nsupaya menarik, menerapkan&#160;styling&#160;dengan berkas&#160;style.css&#160;dan melampirkannya pada&#160;index.html&#160;seperti ini:\nstyle.cssindex.html\n.clock 400px; black; 30px; white; font-family: flex-direction: column;} .clock .time font-size: 64px; auto;} .date 24px; auto;}\nindex.html\n&lt;!doctype web&lt;/title&gt; href=\"style.css\"&gt;&lt;/head&gt;&lt;body&gt; src=\"index.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\ndan beginilah clock moment.js.\nwalaupun moment.js, tag&#160;&#60;script&#62;&#160;melalui direktori&#160;node_modules&#160;tidaklah disarankan. manager. cdn berikut.\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"&gt;&lt;/script&gt;\nuntuk dalam, membahasnya berikut:\nmoment.js: https://momentjs.com/guides/jquery: https://api.jquery.com/\nlangkah berikut:https://github.com/dicodingacademy/a163-bfwd-labs/tree/203-webclock-using-installed-package\ncakupan package\ndalam lokasi tetapkan. global, saja.\nuntuk lokal. &#60;package-name&#62;&#160;namun menambahkan&#160;-g&#160;pada perintahnya.&#160;\nmari package&#160;http-server, -g\nhasilnya:\nmemasang global berkas&#160;package.json&#160;proyek directory default-nya windows, adalah&#160;c files nodejs node_modules. perintah.\nnpm -g\nperintah berikut:\nkita layer package&#160;http-server,&#160;sedangkan bawahnya package&#160;http-server&#160;itu khawatir bawahnya, tampilkan perintah:\nnpm -g --depth=0\nhasilnya:\nnah, package&#160;http-server&#160;dalam start package&#160;http-server&#160;tidak pada&#160;package.json.\nbegitulah selanjutnya, berkenalan webpack.\nmenghapus terpasang\nkita scripts. kita?\nuntuk objek&#160;dependencies&#160;maka menghapusnya uninstall &lt;package-name&gt;\njika pada&#160;devdependencies, menambahkan&#160;--save-dev&#160;di perintahnya:\nnpm --save-dev\ncontoh, --save-dev\ndengan dihapus objek&#160;devdependecies&#160;di berkas&#160;package.json.\n\"dependencies\": {}\nselain dari&#160;package.json, segala berhubungan package&#160;http-server&#160;pada folder&#160;node_modules.\nsetelah script&#160;start&#160;lagi.\nperintah&#160;uninstall&#160;juga alias, cepat perintahnya. alias -h\nbundel bundler\n pendahuluan bundler\npenggunaan external (library) dengannya, sebabnya, library shareable. dua, masalah. puluhan web?\ntak tergantungan bootstrap (css framework), (salah library) demikian terjadi? terpasang.&#160;\nmeskipun menutup &#60;script&#62;. sebagaimana vital. penempatan salah, harapan.\ndari permasalahan-permasalahan modern. berita baiknya, solusinya. bundler!&#160;\ndengan bundler, terdengar tentang isu-isu keliru. mengumpulkan benar otomatis. fantastic!\nsalah bundler webpack. dynamic (kode tahap production).&#160;\npada tuntas dimulai webpack, penggunaannya, bangun sebelumnya.\nyok, semangat!\napa webpack\npada dasarnya, proyek, modul-modul dibungkus (atau lebih) layar.\ndengan leluasa bergantungan. assets produksi.\nwebpack maret 2012. seperti&#160;browserify. disamping tujuan &#8220;browserify&#8221;).\nsecara langsung, browserify sebagai&#160;module bundler. package, menggabungkannya, perintah&#160;require(). perintah&#160;require()&#160;tersebut (melalui transpiling).\ndari konsep, mengkategorikan memproses berkas/modul typescript sass task runner grunt gulp.\nsekitar 2014 pertengahan para developer. webpack-lah kepopulerannya. 5.\noutput\noutput configuration. nama. standarnya penyimpanannya pada&#160;dist -&#62; lokasi&#160;dist&#160;merupakan webpack.\nkita mengkonfigurasi properti&#160;output&#160;pada&#160;webpack.config.js&#160;seperti require('path'); entry: './path/to/my/entry/file.js', path: path.resolve(__dirname, 'dist'), 'my-first-webpack.bundle.js' }};\npada menggunakan&#160;output.filename&#160;dan&#160;output.path&#160;properties lokasi&#160;static assets&#160;yang dibundel. modul&#160;path&#160;yang diimpor menggunakan&#160;node.js berkas. mengenai&#160;module path,&#160;silakan cek&#160;https://nodejs.org/api/path.html.\njika satu&#160;entry point, menggunakan&#160;substitution&#160;untuk unik.\nmodule.exports app: './src/app.js', search: './src/search.js' '[name].js', __dirname '/dist' menghasilkan: ./dist/app.js, ./dist/search.js\nproperti&#160;output&#160;memiliki konfigurasinya. seputar cek dokumentasi berikut:&#160;https://webpack.js.org/configuration/output/\nplugin\nplugin optimasi bundel, management aset, plugin fleksibel. tulang punggung sistem configuration.\nwebpack method&#160;apply&#160;dengan bernama&#160;compiler. ini:&#160;\nconsole-log-on-build-webpack-plugin.js\nconst pluginname 'consolelogonbuildwebpackplugin'; consolelogonbuildwebpackplugin constructor(options) this.options options; apply(compiler) compiler.hooks.run.tap(pluginname, compilation console.log(this.options.message); consolelogonbuildwebpackplugin;\nketika configuration, nilai&#160;this.options.message&#160;pada&#160;console&#160;ketika build berjalan.&#160;\nuntuk terfokus alih-alih, fokuslah keyword&#160;new&#160;seperti require('./console-log-on-build-webpack-plugin.js'); plugins: consolelogonbuildwebpackplugin({ message: 'the process starting!' ]}\nbanyak plugin, pihak ketiga, sebab itulah, fokus plugin. objek&#160;webpack&#160;seperti ini.\nconst require('webpack'); built-in plugins webpack.progressplugin() ]}\nnamun, (di disediakan) memasangnya adalah&#160;html-webpack-plugin. html-webpack-plugin --save-dev\nsetelah pada&#160;webpack configuration&#160;seperti htmlwebpackplugin require('html-webpack-plugin'); //dipasang via htmlwebpackplugin({ template: './src/index.html', 'index.html' ]};\npada melalui&#160;html-webpack-plugin, dibundel.\nmemasang webpack\nsetelah menyimak core concepts-nya, sebagian mencobanya webclock npm.\nsebelum ikuti instruksi modul&#160;node manager&#160;(npm) menghadirkan ini:\nbelum baca pada&#160;node manager&#160;dan sana. memasangnya.\nmemasang webpack\nmemasang moment.js. pada&#160;devdependencies&#160;karena saja.&#160;\nuntuk --save-devnpm webpack-cli --save-dev\natau menyingkat ini:\nnpm package&#160;webpack&#160;dan&#160;webpack-cli, pada&#160;devdependencies&#160;di berkas&#160;package.json.\nmengapa webpack? package&#160;webpack&#160;dan&#160;webpack-cli? (command interface). cli config mode build.\nuntuk menambahkan&#160;script&#160;dengan perintah&#160;webpack&#160;pada&#160;package.json&#160;seperti ini:\n\"scripts\": \"test\": \"echo \\\"error: no test specified\\\" &amp;&amp; exit 1\", \"start\": \"http-server .\", \"build\": \"webpack\"},\nkita berkas&#160;package.json&#160;akan ini:\n{ \"name\": \"webclock\", \"version\": \"1.0.0\", \"description\": \"\", \"main\": \"index.js\", \"scripts\": \"webpack\" \"license\": \"isc\", \"dependencies\": \"^2.24.0\" \"devdependencies\": \"webpack\": \"^5.1.3\", \"webpack-cli\": \"^4.0.0\" build, run build\nnamun, ini:\ndari berikut, tidak/belum menetapkan&#160;webpack nilai&#160;entry standar-nya berlokasi index.js.&#160;\nerror in entry found: error: can't './src' 'c:\\users\\dicoding\\desktop\\webclock'\nuntuk folder&#160;src&#160;dan memindahkan&#160;index.js&#160;pada script&#160;build, ini.\npada nama&#160;dist, berkas&#160;main.js&#160;yang bundel point&#160;src index.js.&#160;\njika tampil baca. itu. kodenya, asli tulis.\nkarena membundel&#160;module. index.js&#160;dalam npm.\nimport $ 'jquery';import 'moment'; updatetime();\nkemudian pada&#160;index.html, ditujukan main.js.\n&lt;!doctype src=\"./dist/main.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\nlalu build\nsetelah&#160;build&#160;selesai berkas&#160;dist main.js berkas&#160;index.html.\nlangkah berikut:https://github.com/dicodingacademy/a163-bfwd-labs/tree/205-webclock-installing-webpack\nmembuat konfigurasi\nsebelumnya dengan&#160;zero artinya? configuration sekali.&#160;zero configuration&#160;ini menginjak 4. kekurangan dalam&#160;zero configuration&#160;adalah inginkan. katakanlah loader configuration&#160;kita menerapkannya.\nkita nama&#160;webpack.config.js kita.\nnama sesuka argument&#160;--config&#160;pada cli. nanti. configuration.\npada ada&#160;entry,&#160;output,&#160;loader,&#160;plugins&#160;dan&#160;mode. kelima dahulu&#160;entry&#160;dan&#160;output&#160;pada&#160;webpack berkas&#160;webpack.config.js.\nconst './src/index.js', 'bundle.js' }};\nsecara default, properti&#160;entry&#160;sebagai bundle utama. nilai&#160;output&#160;sebagai dari&#160;main.js&#160;(nilai standar) menjadi&#160;bundle.js. script&#160;build&#160;di dengan:\nnpm build\nmaka bernama&#160;bundle.js.\nnamun, target dilampirkan pada&#160;index.html&#160;menjadi&#160;bundle.js.\n&lt;!doctype src=\"./dist/bundle.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\njika membuka&#160;index.html&#160;maka menjadi&#160;bundle.js.\npada bundle, terdapat&#160;warning&#160;yang menetapkan&#160;mode&#160;pada berkas&#160;webpack configuration.\njika properti&#160;mode&#160;maka diterapkan, nilai&#160;production. ketimbang properti&#160;mode, modenya muncul warning (pesan peringatan) tentangnya. properti&#160;mode&#160;dengan nilai&#160;production&#160;seperti mode: 'production'};\nlalu, script&#160;build. properti&#160;mode&#160;tidak berjalan.\ncatatan:sebenarnya ukuran&#160;bundle.js&#160;sudah melampaui batas. berkas&#160;bundle.js. sebelumnya.\nhal disebabkan tulis ketergantungan (dependencies) moment. berkas&#160;bundle.js&#160;menjadi bengkak ukurannya.\nini hindari bawa tingkat production. membengkaknya berkas&#160;bundle.js, performa nantinya.\nlangkah berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/206-webclock-webpack-configuration-files\nwebpack dev server\nsaat hasilnya. peduli mayor sekadar ganti warna memperbaharui merepotkan, bukan?\nuntunglah live-reloading mempercepat perintah&#160;build.\nuntuk package&#160;webpack-dev-server&#160;pada&#160;devdependencies&#160;menggunakan npm.\nnpm webpack-dev-server memasangnya, script&#160;start-dev&#160;dengan &#8220;webpack serve&#8221; pada&#160;package.json.\n\"scripts\": \"webpack\", \"start-dev\": \"webpack serve\"}\nmari start-dev\nsetelah alamat&#160;localhost:8080&#160;di alamat kembangkan berikut.\n\nmantab! tetapi, kenapa halaman overlay pesan-pesan peringatan ini? compile penyelesaian &#8220;x&#8221; pojok atas.\nnamun, munculnya selesai, menyembunyikannya tambahan. bernama&#160;devserver. require('path');const ..... 'production', devserver: client: overlay: errors: true, warnings: */}\nkemudian, refresh halaman. mematikan menjalankan&#160;npm start-dev&#160;kembali buka&#160;localhost:8080&#160;kembali, kembali.\ndevserver: },},\npada false properti&#160;warnings&#160;tetapi properti&#160;errors. dimaksudkan menyembunyikan error. kesalahan sajalah overlay.\nwebpack fitur&#160;live-reloading. (html, css, js) perubahannya (save), proses&#160;compiling&#160;ulang browser.\nnamun proses&#160;compiling&#160;memakan demikian?\nhal mode&#160;production&#160;dalam production bundling seoptimal mode&#160;development. menggunakan&#160;babel-loader. compiling terasa transpiling melalui&#160;babel-loader.&#160;\nsolusinya, pisahkan&#160;webpack configuration&#160;untuk production.\ncatatan:\nuntuk service&#160;webpack-dev-server, ctrl+c ingatlah hentikan service&#160;webpack-dev-server&#160;setiap configuration.\nlangkah berikut:https://github.com/dicodingacademy/a163-bfwd-labs/tree/209-webclock-webpack-dev-server\nmengonfigurasi environment\ntujuan dari&#160;development&#160;dan&#160;production&#160;memanglah tahap&#160;development&#160;webpack optimal (hot reloading). kompatibilitasnya keduanya.\n\nnamun berpatokan (common) seperti&#160;entry,&#160;output,&#160;style-loader,&#160;css-loader&#160;dan&#160;htmlwebpackplugin. menghindari bernama&#160;webpack-merge&#160;yang environment-nya.\n&#160;\nmenggunakan webpack-merge\nuntuk menggunakan&#160;webpack-merge&#160;langkah pada&#160;devdependencies&#160;menggunakan webpack-merge --save-dev\nkemudian nama&#160;webpack.common.js.\ndi itu&#160;production&#160;atau&#160;development.\nconst 'bundle.js', module: rules: and test: /\\.css$/, use: loader: 'style-loader', 'css-loader', './src/template.html', 'index.html', }), ],};\nkemudian configuration&#160;baru nama&#160;webpack.prod.js&#160;dan&#160;webpack.dev.js.\nkemudian berikut:\nwebpack.prod.jswebpack.dev.js\nconst merge require('webpack-merge');const common require('./webpack.common.js'); merge(common, babel /\\.js$/, exclude: /node_modules/, 'babel-loader', options: presets: ['@babel/preset-env'], },});\ndi berkas&#160;webpack.common.js&#160;kita nilai&#160;entry,&#160;output&#160;beberapa&#160;loader, dan&#160;plugin&#160;yang environment. menetapkannya environment-nya.\nperhatikan menggunakan&#160;merge()&#160;dari package&#160;webpack-merge, environment-nya.\nmodule.exports ... );\nsetelah environment, script&#160;build&#160;dan&#160;start-dev&#160;pada&#160;package.json&#160;menjadi --config webpack.prod.js\", serve webpack.dev.js\"}\ndengan flag&#160;--config [config-files]&#160;pada script&#160;build&#160;dan&#160;start-dev, berkas&#160;webpack.config.js&#160;karena configuration.\ncoba script&#160;start-dev&#160;ya. fitur&#160;live-reloading&#160;akan cepat.\nlangkah berikut:https://github.com/dicodingacademy/a163-bfwd-labs/tree/210-webclock-webpack-merge/webclock\nrangkuman webpack\nuntuk dipelajari.\napa webpackwebpack fungsinya menggabung berbagai dokumen statis.core conceptsentry: titik dianalisa dependency graph.output: statis point.loaders: transformasi json produksi.plugin: manajemen aset dsb.mode: acuan prosesnya. production, development, none.memasang webpackuntuk --save-dev. command interface (cli).webpack khusus, zero alangkah webpack.config.js.untuk advance, konfigurasinya maksimal.menggunakan interface) npx help.penggunaan loaderloader menerapkannya (package) menangapi css-loader style-loader.penggunaan pluginplugin memaksimalkan bundling. membuatkan menyematkan html.penerapan serverwebpack dituliskan, minor mayor.untuk --save-dev.untuk menjalankannya, terminal.splitting based on modeterdapat none. berbeda-beda. duplikasi mengatasinya webpack-merge.untuk --save-dev.\nasynchronous request\npendahuluan request\nsingle page app (spa) tren terkini kah spa?\nsecara tradisional di-render&#160;dari sisi client. client (browser) bertugas menerjemahkan jendela interaksi form input, terbaru. melakukan&#160;reload&#160;sebelum datanya. 2000-an.\nsebenarnya 90an, tim microsoft outlook xmlhttp internet explorer membangun mail web. diadaptasi sebagai&#160;xmlhttprequest&#160;(xhr).\ndengan menggunakan&#160;xhr, request memperbarui ditampilkan.&#160;xhr&#160;dapat secara&#160;asynchronous&#160;sehingga pengguna komunikasi spa.\nsebelum&#160;json&#160;menjadi ecma 2013, xml dengan&#160;asynchronous xml&#160;atau disingkat ajax.\npada kemunculan ajax, yaitu&#160;fetch.&#160;fetch&#160;lebih fleksibel daripada&#160;xhr&#160;karena asynchronous.\nsaat xml. ajax json. menggunakan&#160;xhr&#160;dan&#160;fetch&#160;untuk konten cepat.\ncors\nsebelum langkah-langkah api, perihal keamanan. response network tabs devtools.\nhal diproses mengontrolnya. keamanan, xhr fetch, diperbolehkan domain sama.\ncontoh bersumber dari&#160;google.com/api, menjadi&#160;google.com. berbeda,&#160;contohnya bing.com, pada&#160;google.com/api. dikenal sebagai&#160;same-origin policy.\nnamun, penyedia teknologi (cross-origin resource sharing) server-nya. mengelakkan kebijakan same-origin dalamnya.\nweb apis\npada sumber berasal? mengaksesnya? menjawab semua, api.\nweb (application programming miliki web, lainnya.\npenyedia keuntungan efisien. macam perangkat atas.\n\npada ilustrasi pola (representational state transfer). simpel jenis text, xml.\npola sepenuhnya datanya berkomunikasi (aplikasi) endpoint (url) endpoint-nya.\nterdapat tipe/method request, data. berikut.\nget api.post data.put data.delete data.\nsetelah response. status gagal. api.\n200 (ok) dipenuhi (web api).400 (bad request) mengerti client.401 (unauthorized) authorization.403 (forbidden) menolak memprosesnya boleh dilakukan.404 (not found) minta, ditemukan.500 (server error) kendala request.\nbanyak cuma-cuma umum. keperluan internal private, terhalangi oleh&#160;same-origin policy.\npersiapan menampilkan, menambah, buku.\nuntuk dahulu&#160;project starter-nya. berikut:&#160;dicodingbooks.\nsetelah mengunduhnya, ekstrak mencontohkan users dicoding desktop.\nsetelah ekstrak, nama&#160;dicodingbooks.\nbuka (yang dibuka proyek) install\nperintah di&#160;devdependencies&#160;dan&#160;dependencies&#160;pada folder&#160;node_modules&#160;beserta package-package (folder) books.\nsebagaimana pelajari. pada&#160;local terminal.\nnpm start-dev\nbuka arahkan alamat&#160;localhost:8080. books ini.\nini dicontohkan source main.js, function&#160;main().\nfunction main() getbook sini! insertbook (book) updatebook removebook (bookid) //.....} main;\nnah, melengkapi book diharapkan.\nkita pada&#160;main.js, ini:\n/* ya!*/ renderallbooks (books) listbookelement document.queryselector('#listbook'); listbookelement.innerhtml books.foreach(book class=\"col-lg-4 col-md-6 col-sm-12\" style=\"margin-top: 12px;\"&gt; class=\"card\"&gt; class=\"card-body\"&gt; &lt;h5&gt;(${book.id}) ${book.title}&lt;/h5&gt; &lt;p&gt;${book.author}&lt;/p&gt; type=\"button\" class=\"btn btn-danger button-delete\" id=\"${book.id}\"&gt;hapus&lt;/button&gt; buttons document.queryselectorall('.button-delete'); buttons.foreach(button button.addeventlistener('click', bookid event.target.id; removebook(bookid); showresponsemessage (message 'check connection') alert(message); document.addeventlistener('domcontentloaded', inputbookid document.queryselector('#inputbookid'); inputbooktitle document.queryselector('#inputbooktitle'); inputbookauthor document.queryselector('#inputbookauthor'); buttonsave document.queryselector('#buttonsave'); buttonupdate document.queryselector('#buttonupdate'); buttonsave.addeventlistener('click', number.parseint(inputbookid.value), title: inputbooktitle.value, author: inputbookauthor.value insertbook(book); buttonupdate.addeventlistener('click', updatebook(book); getbook(); });} main;\nfungsi-fungsi fungsi&#160;renderallbooks&#160;digunakan merender diperoleh fungsi&#160;showresponsemessage&#160;digunakan menampilkan&#160;window.alert()&#160;dengan diambil fungsinya.\nkemudian, event&#160;domcontentloaded&#160;terdapat elemen&#160;&#60;input&#62;&#160;dan&#160;&#60;button&#62;&#160;yang semestinya, obyek&#160;book&#160;baru ke&#160;updatebook&#160;dan&#160;insertbook.\nlalu, index.js.\n/* 'regenerator-runtime';import 'bootstrap/dist/css/bootstrap.min.css';import './styles/main.css';import './scripts/main'; main();\nberkas books. sebatas aplikasinya. configuration.\nanda mempelajari atas,&#160;jangan&#160;anda ya.\nsudah ajax? ya!\najax xhr\nxmlhttprequest penamaannya, beranggapan kenyataannya, format, xml.\nwalaupun (fetch api), alasannya dukungan fetch lakukan, seperti&#160;tracking upload progress.\npenggunaan dasar\nxmlhttprequest&#160;dapat secara&#160;synchronous&#160;maupun&#160;asynchronous. asynchronous.\ncontoh dari&#160;xmlhttprequest&#160;seperti berikut.\n\nlangkah menggunakan&#160;xmlhttprequest&#160;adalah xmlhttprequest();\nlalu, (xhr) (onload) (onerror).\nxhr.onload console.log(this.responsetext);}; xhr.onerror console.log('ups something error');};\ndi dalam&#160;callback function&#160;tersebut, dari&#160;this&#160;merupakan sehingga&#160;this.responsetext&#160;akan text) server.\ncatatan:dikarenakan nilai&#160;this&#160;di function&#160;tersebut obyek, menuliskan&#160;callback function-nya.\nxhr.onload error, console.log(this.responsetext);};\nselanjutnya, url dituju method&#160;open().\nxhr.open('get', 'https://api-to-call.com/endpoint');\nnah, mengirimkan method&#160;send().\nxhr.send();\njadi, dari&#160;xmlhttprequest&#160;dengan berikut&#160;https://books-api.dicoding.dev/list&#160;adalah xmlhttprequest(); xhr.onload error');}; xhr.open('get', 'https://books-api.dicoding.dev/list');xhr.send();\ncoba lakukan&#160;copy&#160;dan&#160;paste&#160;pada (devtools). string. olah mengubahnya method&#160;json.parse().\njson.parse(this.responsetext)\nanda berikut:https://codesandbox.io/s/163-7309-ajax-xhr-basic-jsdl71\nmelengkapi updatebook\nfungsi lengkapi fungsi&#160;updatebook. buku mengubah&#160;title&#160;atau&#160;author&#160;dari api. menyebutkan ketentuan berikut:\nendpoint /edit/:idmethod: putheader:content-type: application/jsonx-auth-token: 12345body: {\"id\" \"title\" \"author\" }\ndari didapatkan put xmlhttprequest //menetapkan sukses responsejson json.parse(this.responsetext); showresponsemessage(responsejson.message); showresponsemessage(); xhr.open('put', `${baseurl}/edit/${book.id}`); mementapkan content-type x-auth-token header xhr.setrequestheader('content-type', 'application/json'); xhr.setrequestheader('x-auth-token', '12345'); json.stringify(book) xhr.send(json.stringify(book));};\njika fungsi&#160;insertbook, url-nya.\nsilakan simpan buku.\najax fetch\nsetelah menggunakan&#160;xmlhttprequest, berpikir, &#8220;adakah langkah?&#8221;. ada! fetch!\nfetch dengan&#160;fetch&#160;kita membuat&#160;http request&#160;lebih membuat&#160;instance&#160;dan jauh adalah&#160;fetch&#160;memanfaatkan callback, gaya&#160;synchronous&#160;menggunakan&#160;async&#160;dan&#160;await. kan?\ndasar fetch\nseperti tugasnya berjalan&#160;asynchronous.\npenggunaan dari&#160;fetch&#160;tampak ini:\nnetwork fungsi&#160;fetch()&#160;tereksekusi.\nfetch('https://books-api.dicoding.dev/list');\njika fungsi&#160;fetch()&#160;akan mengembalikan&#160;promise resolve&#160;dan membawa&#160;response&#160;object nilai&#160;response&#160;yang dibawa&#160;resolve&#160;belum butuhkan, melainkan mengenai&#160;response&#160;itu sendiri, seperti&#160;status code,&#160;target url,&#160;headers, method&#160;json().\nfetch('https://books-api.dicoding.dev/list') .then(response response.json(); });\nmethod&#160;json()&#160;juga membutuhkan&#160;chaining promise&#160;dengan menambahkan&#160;then()&#160;untuk sesungguhnya.\nfetch('https://books-api.dicoding.dev/list') .then(responsejson console.log(responsejson); });\nlalu, block&#160;catch()&#160;pada akhir&#160;chaining promise&#160;untuk apabila&#160;rejected promise&#160;terjadi, fungsi&#160;fetch()&#160;atau&#160;json().\nfetch('https://books-api.dicoding.dev/list') .catch(error console.log(error); });\nkarena async/await synchronous.\nasync/awaitpromise\nasync getbooks() fetch('https://books-api.dicoding.dev/list'); (error) getbooks();\nanda berikut:https://codesandbox.io/s/163-7365-ajax-fetch-basic-8c09io\nmengubah getbook\nkita fungsi&#160;getbook. (responsejson.error) renderallbooks(responsejson.books); `${baseurl}/list`); xhr.send();};\nayo refactor menerapkan&#160;fetch perlahan.\nlangkah fungsi&#160;fetch()&#160;di instance&#160;xhr. dari&#160;baseurl&#160;dan&#160;endpoint&#160;sebagai parameternya.\nconst fetch(`${baseurl}/list`); //....};\nseperti dilakukan. respon tambahkan&#160;chaining method&#160;then()&#160;yang variabel&#160;response&#160;sebagai&#160;response object&#160;yang didapat.\nconst fetch(`${baseurl}/list`) {}); ....};\nkemudian blok&#160;then()&#160;tersebut, nilai&#160;response&#160;menjadi method&#160;response.json().\nconst ....};\nlalu kembalikan (return) blok&#160;then()&#160;dengan tersebut,\nconst ....};\nkarena method&#160;response.json()&#160;juga menambahkan&#160;then()&#160;lainnya (chaining promise). dalam&#160;then()&#160;yang nama&#160;responsejson&#160;(penamaan tidaklah baku, variabelnya).\nconst ....}\nresponsejson&#160;merupakan method&#160;json()&#160;tadi.\nselanjutnya, callback&#160;xhr.onload&#160;ke blok&#160;then()&#160;yang kedua.\nconst ....};\nhapus json.parse(this.responsetext);\nkarena pengubahan melalui&#160;json.parse().\nterakhir method&#160;catch()&#160;dengan parameter&#160;error&#160;pada chaining, flow rejection pada&#160;fetch()&#160;atau&#160;json().\nconst .......};\npada fungsi&#160;showresponsemessage()&#160;dengan memberikan&#160;error&#160;sebagai fungsinya.\nconst showresponsemessage(error); .....};\npenerapan&#160;fetch&#160;sudah yay! pengiriman leluasa. fungsi&#160;getbook&#160;akan });};\nsimpan mestinya.\njika menggunakan&#160;async/await. fungsi&#160;getbook&#160;tampak }};\nmengubah updatebook\nselanjutnya xhr.send(json.stringify(book));};\nayo fetch(`${baseurl}/edit/${book.id}`); fungsi&#160;updatebook&#160;kita request&#160;put, menetapkan&#160;options&#160;pada fungsi&#160;fetch&#160;seperti fetch(`${baseurl}/edit/${book.id}`, method: 'put' yaitu&#160;content-type&#160;dengan &#8220;application/json&#8221; dan&#160;x-auth-token&#160;dengan &#8220;12345&#8221;,&#160;maka properti&#160;headers&#160;pada&#160;options&#160;seperti 'put', headers: 'content-type': 'application/json', 'x-auth-token': '12345' .....};\nselanjutnya, pindahkan data&#160;body&#160;yang melalui&#160;xhr&#160;pada method&#160;send()&#160;ke property&#160;body&#160;di dalam&#160;object&#160;options&#160;dari fetch.\nconst body: .....};\nkonfigurasi&#160;options&#160;sudah selesai! fungsi&#160;insertbook.\nconst }).then(response }).then(responsejson }).catch(error });};\npenerapan&#160;fetch&#160;sudah menggunakan&#160;xhr&#160;dengan fungsi&#160;updatebook&#160;akan fungsi&#160;updatebook&#160;tampak options options); }};\nlatihan: finder\nvoila!&#160;anda ujung menuju submission, finder.\njauh menerapkannya?\nuntuk publik team olahraga.&#160;sport dicoding&#160;merupakan olahraga daftar, logo, olahraga. sport inspirasi dari&#160;thesportdb&#160;yang berbayar.\nuntuk public dokumentasinya berikut:&#160;https://sports-api.dicoding.dev/jika luck!&#160;\nmengubah removebook\nterakhir fungsi&#160;removebook. delete xhr.open('delete', `${baseurl}/delete/${bookid}`); fetch(`${baseurl}/delete/${bookid}`); .....};\ndikarenakan request&#160;delete, fetch(`${baseurl}/delete/${bookid}`, 'delete' .....};\nlalu, yaitu&#160;x-auth-token&#160;dengan &#8220;12345&#8221;. 'delete', fungsi&#160;insertbook ataupun&#160;getbook.\nconst fungsi&#160;removebook&#160;akan mestinya.\npenerapan berikut:&#160;https://github.com/dicodingacademy/a163-bfwd-labs/tree/303-dicoding-books-fetch"},{"id":"item5488fd2d-2976-4bf3-9925-e","title":"Page","created":1723216766,"location":"item-5488fd2d-2976-4bf3-9925-ebae7a26b8ef","description":"\n\n","text":"eytrt\n\n\nyttyuruy"},{"id":"item72a5228c-d0bd-4b96-a124-f","title":"Lesson 1","created":1723216821,"location":"item-72a5228c-d0bd-4b96-a124-f64e18dea25a","description":"","text":""},{"id":"item52e57103-e309-4136-8c2e-f","title":"Introduction","created":1723216821,"location":"item-52e57103-e309-4136-8c2e-fbb29983a013","description":"","text":""}]